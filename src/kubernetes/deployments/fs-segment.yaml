apiVersion: v1
kind: ConfigMap
metadata:
  name: fs-segment-config
data:
  LIVE_CACHE_PASS: "31233123"

  # For connect to Segment DB
  POSTGRES_HOST: "db-segment-postgres"
  POSTGRES_USER: "postgres"
  POSTGRES_PASSWORD: "31233123"
  POSTGRES_DB: "postgres"
---
apiVersion: v1
kind: Service
metadata:
  name: fs-segment-nginx
  labels:
    app: fs-segment-nginx
    topic: segment
spec:
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: fs-segment-nginx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fs-segment-nginx-dep
  labels:
    tire: core
    topic: segment
spec:
  selector:
    matchLabels:
      app: fs-segment-nginx
  replicas: 1
  template:
    metadata:
      labels:
        app: fs-segment-nginx
        topic: segment
    spec:
      volumes:
        - name: seg-data
          persistentVolumeClaim:
            claimName: pvc-fs-segment
      containers:
        - name: fs-segment-nginx
          image: nginx:1.19
          imagePullPolicy: Never
          ports:
            - containerPort: 80
          volumeMounts:
            - name: seg-data
              mountPath: /usr/share/nginx/html
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fs-segment-insert-dep
  labels:
    tire: core
    topic: segment
spec:
  selector:
    matchLabels:
      app: fs-segment-insert
  replicas: 1
  template:
    metadata:
      labels:
        app: fs-segment-insert
        topic: segment
    spec:
      containers:
        - name: fs-segment-insert
          image: fs-insert
          imagePullPolicy: Never
          envFrom:
            - configMapRef:
                name: fs-segment-config
            - configMapRef:
                name: gb-config
          volumeMounts:
            - name: seg-data
              mountPath: /data
      volumes:
        - name: seg-data
          persistentVolumeClaim:
            claimName: pvc-fs-segment
      initContainers:
        - name: wait-for-mq
          image: busybox:1.28
          imagePullPolicy: Never
          command: ['sh', '-c', "until nslookup $GB_MQ_HOST; do echo \
'Wait for gb-mq'; sleep 3; done"]
          envFrom:
            - configMapRef:
                name: gb-config
        - name: wait-for-live-mq
          image: busybox:1.28
          imagePullPolicy: Never
          command: ['sh', '-c', "until nslookup $MQ_CACHE_HOST; do echo \
'Wait for live-mq'; sleep 3; done"]
          envFrom:
            - configMapRef:
                name: gb-config
